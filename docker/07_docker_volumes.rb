puts '                                        Монтирование общей папки'

# По умолчанию, когда мы запускаем контейнер и делаем в нем какие-то настройки, добавляем данные в БД итд, а потом перезапускаем - то все эти изменения не сохраняются

# Монтирование общей папки для хост машины и контейнера - позволяет извне контейнера добавлять(хранить) в приложении в контейнере временные данные. Это устаревший способ и предпочтительнее использовать Docker Volumes

# -v    - флаг команды run соединить папку на нашем коипьютере(хост машина) с папкой в контейнере. Пути нужно указывать абсолютными. Название папок должно быть одинаковым, пути записываются через двоеточие, первым путь к папке на нашем ПК и вторым путь к папке в контейнере

# $ docker run -v /user/some/app/resourses:/usr/src/app/resourses openjdk    - создаем контейнер с общей папкой resourses, которая находится на хост машине по пути /user/some/app/resourses а в контейнере по пути /usr/src/app/resourses



puts '                                             Docker Volumes'

# Docker Volumes / Докер Тома – позволяют сохранять значения внутри контейнеров даже после их перезапуска. Сохраняет настройки на сервере(хост машине). За счет томов можно хранить значения в БД, файлы, документы итд. Том означает, что даже если мы закроем или удалим Docker, мы можем указать, какие файлы мы хотим сохранить на нашем локальном компьютере.

# По сути Docker Volumes это надстройка над теми же смонтированными общими папками. Сам Docker Volumes представляет собой папку, просто она хранится по определенному пути. Тоесть данные хранятся не в контейнере, а в Volume и соответсвенно при перезапуске контейнера он опять получит к ним доступ. Удобно хранить там например БД

# $ docker volume ls                - посмотреть какие тома у нас доступны

# $ docker volume create web        - создать тома с именем "web"

# -v   - флаг команды run для подключения Docker Volume, передаем в него название созданныого тома и через двоеточие абсолютный путь каталога внутри контейнера

# $ docker run --name MyJava -v web:/usr/src/app/resourses openjdk      - создаем контейнер с подключенным томом "web" к папке контейнера "/usr/src/app/resourses"














#
