puts '                                              Docker'

# Image(образы) - это некие пакеты содержащие готовый функционал. Образы качаются из определенного регистра. Образ нельзя изменять. На основе образа мы можем создать готовый проект/контейнер

# Контейнер - наш проект содержащий функционал из образов и на основе этого функционала наше приложение. Этот проект можно запускать и пересылать. Например можно скачать образы разных языков и написать код на каждом и наш контейнер будет работать, тк у нас в контейнере будет функционал для каждого из этих языков



puts '                                     Запуск контейнеров/приложений'

# В браузере нужно открыть локалхост и указать порт 80. localhost/80(прим указываем номер порта нашего контейнера), либо открыть контейнер из приложения Docker Desktop Containers Open with browser

# В итоге мы получаем вебсайт с некой функциональностью находящийся на нашем компьютере и работающий по некоторому порту

# Так же можно скачать образ языка и внутри контейнера будет рабочий язык без наобходимости установки его на нашем компьютере. Так же можно будет передать этот контейнер на другой компьютер



puts '                                              Windows'

# https://docs.docker.com/desktop/windows/                - Руководство пользователя Docker Desktop для Windows

# https://bv-dev.ru/ustanovka-dockerdoke-na-windows-10-reshenie-problem/     -  Решение проблемы с виндоус 10

# Если Docker работает на WSL, можно вернуть оперативную память, завершив все запущенные дистрибутивы с помощью команды:
# > wsl --shutdown


# На ОС без Линукс ядра запускает миллиард инстансов qemu, чтобы сэмулировать подходящее окружение
# На линуксе ничего не будет жрать
# На ОС, где не доступен докер, достаточно просто qemu иметь при себе, где докер, например в альпине можно будет запустить














#
